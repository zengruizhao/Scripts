clear;clc;close all;
addpath(genpath('./script'))
addpath(genpath('/media/zzr/Data/git/code/trunk/matlab/general'));
addpath(genpath('/media/zzr/Data/git/code/trunk/matlab/images'));
load '/media/zzr/My Passport/430/MRI/T1InformationPreprocess.mat';
path = '/media/zzr/My Passport/430/MRI/Resample/';
case_all = dir(path);
%% Raw Histogram 
% for i=3:length(case_all)
%     disp(i-2);
%     case_path = [path case_all(i).name];
%     color = 'b';
%     for ii=1:length(Information)
%        if contains(case_all(i).name, Information(ii, 1))
%            if contains(Information(ii, 5), 'GE'), color='r';
%            else, color='g';end
%        end
%     end
%     if color == 'b', fprintf(case_all(i).name);end
%     all_file = dir(case_path);
%     for j=3:length(all_file)
%         if contains(all_file(j).name, 'img') && contains(all_file(j).name, 'T2')
%             info = niftiinfo([case_path '/' all_file(j).name]);
%             V = niftiread(info);
%             out = round(rescale_range(V,0,2000));
%             inputdata=sort(out(:));
%             plotdist(inputdata, color);
%             title('Histograms'); hold on
%         end
%     end
% end
%% After Standardization
options.docheck = false;
options.rescaleMax = 2000;
templatevolume = [];templatemask = [];
idx = randperm(length(case_all)-2, 2);
for ii=1:length(idx)
    case_path = [path case_all(idx(ii) + 2).name];
    all_file = dir(case_path);
    for j=3:length(all_file)
        if contains(all_file(j).name, 'img') && contains(all_file(j).name, 'T1')
            infoImg = niftiinfo([case_path '/' all_file(j).name]);
            Img = niftiread(infoImg);
            infoMask = niftiinfo([case_path '/' all_file(j).name(1:end-11) '_label.nii.gz']);
            Mask = niftiread(infoMask);
            templatevolume(end+1:end+length(Img(:))) = Img(:);
            templatemask(end+1:end+length(Img(:))) = Mask(:);
        end
    end
end
checkifInt = find(templatevolume); checkifInt = templatevolume(checkifInt(1));
if ceil(checkifInt) ~= floor(checkifInt)
%     disp('Rounding non-integer values in TEMPLATEVOLUME');
    templatevolume = round(templatevolume);
end
templatevolume = round(rescale_range(templatevolume, 0, options.rescaleMax));
templatedata=sort(templatevolume(:));
templatedata(templatedata<=zeroval)=[];



options.TEMCANCERMASKS = templatemask;
for i=3:length(case_all)
    disp(i-2);
    case_path = [path case_all(i).name];
    color = 'b';
    for ii=1:length(Information)
       if contains(case_all(i).name, Information(ii, 1))
           if contains(Information(ii, 5), 'GE'), color='r';
           else, color='g';end
       end
    end
    if color == 'b', fprintf(case_all(i).name);end
    all_file = dir(case_path);
    for j=3:length(all_file)
        if contains(all_file(j).name, 'img') && contains(all_file(j).name, 'T1')
            infoImg = niftiinfo([case_path '/' all_file(j).name]);
            V = niftiread(infoImg);
            infoMask = niftiinfo([case_path '/' all_file(j).name(1:end-11) '_label.nii.gz']);
            options.INCANCERMASKS = niftiread(infoMask);
            [outputvolume, ~] = int_stdn_landmarks(V, templatevolume, options);
            plotdist(outputvolume, color);hold on;
        end
    end
end
title('Histograms'); hold off;




